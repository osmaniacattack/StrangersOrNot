{"version":3,"sources":["components/nav/nav.js","components/footer/footer.js","components/card/card.js","assets/peep-one.png","assets/peep-two.png","components/card/landingCard/landingCard.js","assets/peep-three.png","assets/peep-four.png","components/card/headingCard/headingCard.js","pages/landing/landing.js","pages/game/liveplay/liveplay.js","components/card/settingCard/settingCard.js","pages/game/game.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","useState","theme","setTheme","appliedTheme","createMuiTheme","light","dark","ThemeProvider","CssBaseline","AppBar","position","className","Toolbar","Typography","variant","style","textDecoration","color","href","Switch","checked","onChange","palette","type","useStyles","makeStyles","subheader","backgroundColor","background","paper","appBar","top","bottom","height","textAlign","grow","flexGrow","Footer","classes","Fragment","margin","Card","props","Paper","elevation","Grid","container","item","xs","sm","md","lg","align","title","question","marginBottom","brand","LandingCard","learnButton","src","PeepOne","PeepTwo","center","Button","size","onClick","changeLandingToSettings","root","display","flexWrap","spacing","width","peep","PeepThree","heading","PeepFour","Landing","Container","mainLandingSettings","id","LivePlay","number","numberPerRound","React","questionArray","setQuestionArray","currentId","setCurrentId","useEffect","questions","count","axios","get","then","res","Set","Object","entries","data","key","value","tempArr","card_value","Math","floor","random","length","includes","push","console","log","catch","err","disabled","SettingCard","startSettings","setStartSettings","startGame","setStartGame","setNumber","justify","ToggleButtonGroup","exclusive","e","newNumber","ToggleButton","Game","App","landing","setLanding","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ee2f8f0.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Switch from \"@material-ui/core/Switch\";\nimport Button from '@material-ui/core/Button';\nimport '../nav/nav.css'\n\n// Navigation Bar Component\n\nexport default function Nav() {\n  const [theme, setTheme] = useState(true);\n  const appliedTheme = createMuiTheme(theme ? light : dark); // Used to toggle the dark mode feature\n\n  const handleThemeChange = () => {\n    setTheme(!theme);\n  };\n\n  return (\n    <ThemeProvider theme={appliedTheme}>\n      <CssBaseline />\n      <AppBar position=\"static\" className=\"nav\">\n        <Toolbar>\n          <Typography variant=\"h5\" className=\"title\"><a style={{textDecoration: 'none', color: 'white'}} href=\"https://strangers-or-not.vercel.app/\">STRANGERS OR NOT</a></Typography>\n          <span className=\"buttonSpan\">\n            <Switch style={{color:\"white\"}} checked={theme} onChange={handleThemeChange} />\n          </span>\n        </Toolbar>\n      </AppBar>\n    </ThemeProvider>\n  );\n}\n\nexport const light = {\n    palette: {\n        type: \"light\"\n    }\n};\n\nexport const dark = {\n    palette: {\n        type: \"dark\"\n    }\n};","import React from \"react\"\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n// Footer component\n\nconst useStyles = makeStyles((theme) => ({\n    subheader: {\n      backgroundColor: theme.palette.background.paper,\n    },\n    appBar: {\n      top: 'auto',\n      bottom: 0,\n      height: 60,\n      textAlign: 'center'\n    },\n    grow: {\n      flexGrow: 1,\n    },\n  }));\n\nexport default function Footer() {\n    const classes = useStyles();\n  \n    return (\n      <React.Fragment>\n        <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar} style={{backgroundColor:\"#bf0413\"}}>\n          <Toolbar>\n            <Typography style={{margin:\"auto\"}}>Created with some love from Abdul and Ryan (and for a class project!)</Typography>\n          </Toolbar>\n        </AppBar>\n      </React.Fragment>\n    );\n  }","import React from \"react\";\nimport { Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport \"../card/card.css\";\nimport { Grid } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\n\n// General card component used for the live game play and for instructions on the landing page\n\nexport default function Card(props){ \n    return (\n        <div>\n            <Paper elevation={7} className=\"paper\">\n                <Grid container>\n                    <Grid item xs={12} sm={12} md={12} lg={12}>\n                        <Typography align=\"center\" className=\"cardLevel\" variant=\"h6\" style={{margin: \"2rem 0 0 0\"}}>{props.title}</Typography>\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={12} lg={12}>\n                        <Typography align=\"center\" variant=\"h5\" className=\"cardQuestion\" style={{margin: \"1rem\"}}>{props.question}</Typography>\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={12} lg={12} style={{marginBottom: \"700px\"}}>\n                        <Typography align=\"center\" variant=\"h6\" className=\"cardBranding\">{props.brand ? props.brand: 'Strangers Or Not'}</Typography>\n                    </Grid>\n                </Grid>\n            </Paper>\n        </div>\n    )\n};","export default __webpack_public_path__ + \"static/media/peep-one.5b8142b9.png\";","export default __webpack_public_path__ + \"static/media/peep-two.8c53e990.png\";","import React, { useState } from \"react\";\nimport { Paper } from '@material-ui/core';\nimport { Grid } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport PeepOne from '../../../assets/peep-one.png';\nimport PeepTwo from '../../../assets/peep-two.png';\nimport \"../landingCard/landingCard.css\";\n\n// Component for the landing card a user see's at the first visit\n\nexport default function LandingCard(props){\n    let learnButton = props.learnButton;\n\n    return (\n        <div>\n            <Paper elevation={7} className=\"paper\">\n                <img src={PeepOne} className=\"peepOne\"/>\n                <img src={PeepTwo} className=\"peepTwo\"/>\n                <Grid container>\n                    <Grid item xs={12} sm={12} md={12} lg={12}>\n                        <Typography align=\"center\" className=\"cardTitle\" variant=\"h2\">{props.title}</Typography>\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={12} lg={12}>\n                        <Typography align=\"center\" variant=\"h6\" className=\"cardDescription\">{props.center}</Typography>\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={12} lg={12}>\n                        <Grid container>\n                            <Grid item xs={3} sm={3} md={3} lg={3}></Grid>\n                            <Grid item xs={7} sm={7} md={7} lg={7}>\n                                {learnButton === true ? <Button variant=\"contained\" size=\"medium\" className=\"landingButtons leftButton\"><a href=\"#aboutSection\" style={{textDecoration: 'none', color: 'white'}}>Learn to Play</a></Button> : null}\n                                <Button variant=\"contained\" size=\"medium\" className=\"landingButtons rightButton\" onClick={props.changeLandingToSettings}>Play Game</Button>\n                            </Grid>\n                            <Grid item xs={2} sm={2} md={2} lg={2}></Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                \n            </Paper>\n        </div>\n    )\n};","export default __webpack_public_path__ + \"static/media/peep-three.3e976533.png\";","export default __webpack_public_path__ + \"static/media/peep-four.d1f6aa3f.png\";","import React from \"react\";\nimport { Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport PeepThree from '../../../assets/peep-three.png';\nimport PeepFour from '../../../assets/peep-four.png';\nimport \"../headingCard/headingCard.css\";\n\n// A card component used as \"headers\" for the landing page\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      '& > *': {\n        margin: theme.spacing(1),\n        width: theme.spacing(16),\n        height: theme.spacing(16),\n      },\n    },\n  }));\n  \nexport default function LandingCard(props){ //add props\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Paper elevation={7} className=\"headingCard\">\n                {props.peep == 'three' ? <img src={PeepThree} className=\"peepThree\"/> : null}\n                <Typography variant=\"h2\" className=\"textSpace\">{props.heading}</Typography>\n                {props.peep == 'four' ? <img src={PeepFour} className=\"peepFour\"/> : null}\n            </Paper>\n        </div>\n    )\n};","import React from \"react\";\nimport Card from \"../../components/card/card\";\nimport LandingCard from \"../../components/card/landingCard/landingCard\";\nimport HeadingCard from \"../../components/card/headingCard/headingCard\";\nimport { Grid } from '@material-ui/core';\nimport { Container } from '@material-ui/core';\nimport \"../landing/landing.css\"\n\n// Landing page component that holds the Landing Card, Heading Card, and regular Card components\n\nexport default function Landing(props){\n    return (\n        <Container>\n            <Grid container className=\"landingCardSpace shift\">\n                <Grid item xs={1} sm={1} md={2} lg={2}/>\n                <Grid item xs={10} sm={10} md={8} lg={8}>\n                    <LandingCard title=\"STRANGERS OR NOT\" center={\"A GAME TO CREATE HUMAN CONNECTION\"} learnButton={true} changeLandingToSettings={props.mainLandingSettings} />\n                </Grid>\n                <Grid item xs={1} sm={1} md={2} lg={2}/>\n            </Grid>\n            <div id=\"aboutSection\">\n            <Grid container className=\"shift\">\n                <Grid item xs={1} sm={1} md={2} lg={2}/>\n                <Grid item xs={10} sm={10} md={8} lg={8}>\n                    <HeadingCard heading=\"ABOUT THE GAME\" peep=\"three\"/>\n                </Grid>\n                <Grid item xs={1} sm={1} md={2} lg={2}/>\n            </Grid>\n            </div>\n            <Grid container className=\"shift\">\n                <Grid item xs={1} sm={1} md={2} lg={2}/>\n                <Grid item xs={10} sm={10} md={8} lg={8}>\n                    <Card title=\"ABOUT THE GAME\" question=\"STRANGERS OR NOT IS A GAME BASED OFF OF THE POPULAR CARD GAME, WE'RE NOT REALLY STRANGERS. IT IS A PURPOSE DRIVEN CARD GAME AND MOVEMENT ALL ABOUT EMPOWERING MEANINGFUL CONNECTIONS.\"/>\n                </Grid>\n                <Grid item xs={1} sm={1} md={2} lg={2}/>\n            </Grid>\n            <Grid container className=\"shift\">\n                <Grid item xs={1} sm={1} md={2} lg={2}/>\n                <Grid item xs={10} sm={10} md={8} lg={8}>\n                    <Card title=\"ABOUT THE GAME\" question=\"THREE CAREFULLY CRAFTED LEVELS OF QUESTIONS AND WILDCARDS WILL ALLOW YOU TO DEEPEN YOUR EXISTING RELATIONSHIP AND CREATE NEW ONES.\"/>\n                </Grid>\n                <Grid item xs={1} sm={1} md={2} lg={2}/>\n            </Grid>\n            <Grid container className=\"shift\">\n                <Grid item xs={1} sm={1} md={2} lg={2}/>\n                <Grid item xs={10} sm={10} md={8} lg={8}>\n                    <HeadingCard heading=\"HOW TO PLAY\" peep=\"four\"/>\n                </Grid>\n                <Grid item xs={1} sm={1} md={2} lg={2}/>\n            </Grid>\n            <Grid container className=\"shift\">\n                <Grid item xs={1} sm={1} md={2} lg={2}/>\n                <Grid item xs={10} sm={10} md={8} lg={8}>\n                    <Card title=\"HOW TO PLAY\" question=\"ORGANIZE A VIRTUAL CALL WITH WHOMEVER YOU'D LIKE TO PLAY WITH. ONE PLAYER CAN HAVE THE QUESTIONS UP FOR THE GROUP.\"/>\n                </Grid>\n                <Grid item xs={1} sm={1} md={2} lg={2}/>\n            </Grid>\n            <Grid container className=\"shift\">\n                <Grid item xs={1} sm={1} md={2} lg={2}/>\n                <Grid item xs={10} sm={10} md={8} lg={8}>\n                    <Card title=\"HOW TO PLAY\" question=\"HAVE THE ONE PLAYER CHOOSE HOW MANY CARDS THEY WANT PER ROUND. THEN, THE PLAYER WILL HAVE THE CARD IN PLAY SHOWN ON THEIR SCREEN, SO THEY CAN READ THE QUESTION CARD TO THE REST OF THE GROUP.\"/>\n                </Grid>\n                <Grid item xs={1} sm={1} md={2} lg={2}/>\n            </Grid>\n            <Grid container className=\"shift\">\n                <Grid item xs={1} sm={1} md={2} lg={2}/>\n                <Grid item xs={10} sm={10} md={8} lg={8}>\n                    <Card title=\"HOW TO PLAY\" question=\"GO AROUND LETTING EACH PLAYER ANSWER THE QUESTION BEFORE MOVING ON. USE THE ARROWS TO MOVE ON TO THE NEXT QUESTION OR TO LOOK BACK AT PREVIOUS QUESTIONS.\"/>\n                </Grid>\n                <Grid item xs={1} sm={1} md={2} lg={2}/>\n            </Grid>\n            <Grid container className=\"shift\">\n                <Grid item xs={1} sm={1} md={2} lg={2}/>\n                <Grid item xs={10} sm={10} md={8} lg={8}>\n                    <Card title=\"HOW TO PLAY\" question=\"LEVEL 1 CARDS ARE PERCEPTION QUESTIONS. THIS LEVEL IS ABOUT GAINING PERSPECTIVE ON WHAT FIRST IMPRESSIONS WE GIVE OFF AND CHALLENGING THE ASUMPTIONS WE MAKE ABOUT OTHERS.\"/>\n                </Grid>\n                <Grid item xs={1} sm={1} md={2} lg={2}/>\n            </Grid>\n            <Grid container className=\"shift\">\n                <Grid item xs={1} sm={1} md={2} lg={2}/>\n                <Grid item xs={10} sm={10} md={8} lg={8}>\n                    <Card title=\"HOW TO PLAY\" question=\"LEVEL 2 CARDS ARE CONNECTION QUESTIONS. THIS LEVEL IS ABOUT ASKING THE RARELY ASKED QUESTIONS AND CONNECTING ON A DEEPER LEVEL.\"/>\n                </Grid>\n                <Grid item xs={1} sm={1} md={2} lg={2}/>\n            </Grid>\n            <Grid container className=\"shift\">\n                <Grid item xs={1} sm={1} md={2} lg={2}/>\n                <Grid item xs={10} sm={10} md={8} lg={8}>\n                    <Card title=\"HOW TO PLAY\" question=\"LEVEL 3 ARE REFLECTION QUESTIONS. THIS LEVEL IS THE TIME TO REFLECT ON YOUR GAME EXPERIENCE.\"/>\n                </Grid>\n                <Grid item xs={1} sm={1} md={2} lg={2}/>\n            </Grid>\n            <Grid container className=\"shift\">\n                <Grid item xs={1} sm={1} md={2} lg={2}/>\n                <Grid item xs={10} sm={10} md={8} lg={8}>\n                    <Card title=\"HOW TO PLAY\" question=\"AT THE END OF THE GAME, THERE WILL BE A FINAL CARD. SEND YOUR PLAYERS A MESSAGE. OPEN ONLY ONCE YOU ALL HAVE LEFT THE CALL.\"/>\n                </Grid>\n                <Grid item xs={1} sm={1} md={2} lg={2}/>\n            </Grid>\n            <Grid container className=\"shift\">\n                <Grid item xs={1} sm={1} md={2} lg={2}/>\n                <Grid item xs={10} sm={10} md={8} lg={8}>\n                    <HeadingCard heading=\"Version 1.0\" peep=\"none\"/>\n                </Grid>\n                <Grid item xs={1} sm={1} md={2} lg={2}/>\n            </Grid>\n            <Grid container className=\"shift\">\n                <Grid item xs={1} sm={1} md={2} lg={2}/>\n                <Grid item xs={10} sm={10} md={8} lg={8}>\n                    <Card title=\"VERSION 1.0\" question=\"This is a work in progress so all constructive feedback is appreciated! The game is currently optimized only for desktop and vertical phone orientations.\"/>\n                </Grid>\n                <Grid item xs={1} sm={1} md={2} lg={2}/>\n            </Grid>\n            <Grid container className=\"shift\">\n                <Grid item xs={1} sm={1} md={2} lg={2}/>\n                <Grid item xs={10} sm={10} md={8} lg={8}>\n                    <Card title=\"VERSION 1.0\" question=\"If you experience any issues please contact us with the device you used as well as what the problem was.\"/>\n                </Grid>\n                <Grid item xs={1} sm={1} md={2} lg={2}/>\n            </Grid>\n        </Container>\n    )\n}\n\n","import React, { useState, useEffect } from \"react\"\nimport { Container } from \"@material-ui/core\"\nimport { Typography } from \"@material-ui/core\"\nimport Card  from \"../../../components/card/card\"\nimport { Grid } from \"@material-ui/core\"\nimport { Button } from \"@material-ui/core\"\nimport \"../../game/liveplay/liveplay.css\"\nimport axios from 'axios';\n\n// The component that the actual game runs on. Calls API and renders game conditionally using currentId\n\nexport default function LivePlay(props){\n    let number = props.numberPerRound; // receives number of cards per round from parent component\n    let [questionArray, setQuestionArray] = React.useState([]) // questions from API are stored here\n    let [currentId, setCurrentId] = React.useState(0); // current question number used to keep track of level type\n     \n    useEffect(() => {\n        let questions = [];\n        let count = 0;\n        axios.get('https://strangers-or-not.firebaseio.com/.json')\n            .then(res => {\n                let tempSet = new Set();\n                for (const [key, value] of Object.entries(res.data)){\n                    let tempArr = [];\n                    while (count < number){\n                        let card_value = value[Math.floor((Math.random() * value.length))];\n                        if (key === \"level1\"){\n                            if(!tempArr.includes(card_value)){ // section pushes cards to one big array and checks for no repeated cards\n                                tempArr.push(card_value);\n                                questions.push([\"Level 1: Perception\", card_value]);\n                                count++;\n                            }\n                        }\n                        else if (key === \"level2\"){\n                            if(!tempArr.includes(card_value)){\n                                tempArr.push(card_value);\n                                questions.push([\"Level 2: Connection\", card_value]);\n                                count++;\n                            }\n                        }\n                        else if (key === \"level3\"){\n                            if(!tempArr.includes(card_value)){\n                                tempArr.push(card_value);\n                                questions.push([\"Level 3: Reflection\", card_value]);\n                                count++;\n                            }\n                        }\n                    }\n                    count = 0;\n                }\n                console.log(questions);\n                questions.push([\"FINAL CARD\", \"EACH PLAYER SEND A MESSAGE TO THE OTHER. OPEN ONLY ONCE THE GAME HAS CONCLUDED.\"])\n                setQuestionArray(questions);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, [])\n\n    function handlePrevious() {\n        // decrements the currentId to take the previous question\n        setCurrentId(currentId - 1);\n    }\n\n    function handleNext() {\n        // increments the currentId to take the next question\n        setCurrentId(currentId + 1);\n    }\n    \n    return (\n        // conditional rendering of the question cards only once the questions have loaded\n        <Container>\n            {questionArray.length > 0? \n            <Grid container key={currentId}>\n                <Grid item xs={1} sm={2} md={2} lg={2}></Grid>\n                <Grid item xs={10} sm={8} md={8} lg={8} className=\"gameStyling\">\n                    <Typography variant=\"h5\" className=\"numberStyling\">Card {currentId+1}/{number*3+1}</Typography>\n\n                    <Card title={questionArray[currentId][0]} question={questionArray[currentId][1]} brand=\"Strangers or Not\"/>\n                    <Button disabled={currentId < 1} \n                            variant=\"outlined\" \n                            className=\"prevButton prevNext\" \n                            onClick={handlePrevious}>Previous</Button>\n\n                    <Button disabled={currentId >= number*3}\n                            variant=\"outlined\"\n                            className=\"nextButton prevNext\" \n                            onClick={handleNext}>\n                            {currentId+1 >= number*3 ? 'Final Card' : 'Next'}</Button>\n                </Grid>\n                <Grid item xs={1} sm={2} md={2} lg={2}></Grid>\n\n            </Grid>\n        : 'loading...'}\n        </Container>\n    )\n}","import React, { useState, useEffect } from \"react\"\nimport { Typography } from \"@material-ui/core\"\nimport { Button } from \"@material-ui/core\"\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { Paper } from \"@material-ui/core\"\nimport { Grid } from \"@material-ui/core\"\nimport LivePlay from \"../../../pages/game/liveplay/liveplay\";\nimport \"../settingCard/settingCard.css\"\n\n// Component used to customize game settings and initialize game play\n\nexport default function SettingCard(props){\n    const [startSettings, setStartSettings] = React.useState(true); // State for toggling from setting card to game card\n    const handleSettings = () => {\n      setStartSettings(false);\n      setStartGame(true);\n    }\n\n    const [startGame, setStartGame] = React.useState(false);\n\n    const [number, setNumber] = React.useState(0); // State for holding the number of cards to pass to child component\n    const handleChange = (e, newNumber) => {\n        setNumber(newNumber);\n    }\n\n\n    return(\n        // Conditional rendering the setting card if settings have not been chosen yet.\n        <div>\n            {startSettings === true ? \n            <Paper elevation={7} className=\"paperSetting\">\n                <Grid container>\n                    <Grid item xs={12} sm={12} md={12} lg={12}>\n                        <Typography align=\"center\" className=\"cardLevel\" variant=\"h4\">How many cards do you <br/>want to play per level?</Typography>\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={12} lg={12}>\n                        <Grid container>\n                        <Grid item xs={2} sm={2} md={2} lg={2}></Grid>\n                        <Grid container item xs={8} sm={8} md={8} lg={8} justify=\"center\">\n                            <ToggleButtonGroup value={number} exclusive onChange={handleChange} className=\"groupSpace\">\n                                <ToggleButton disabled={number === 3 ? true : false} value={3} className={number === 3 ? \"disabledButton\" : \"buttonGroup\"}>3</ToggleButton>\n                                <ToggleButton disabled={number === 5 ? true : false} value={5} className={number === 5 ? \"disabledButton\" : \"buttonGroup\"}>5</ToggleButton>\n                                <ToggleButton disabled={number === 7 ? true : false} value={7} className={number === 7 ? \"disabledButton\" : \"buttonGroup\"}>7</ToggleButton>\n                                <ToggleButton disabled={number === 9 ? true : false} value={9} className={number === 9 ? \"disabledButton\" : \"buttonGroup\"}>9</ToggleButton>\n                                <ToggleButton disabled={number === 11 ? true : false} value={11} className={number === 11 ? \"disabledButton\" : \"buttonGroup\"}>11</ToggleButton>\n                                <ToggleButton disabled={number === 13 ? true : false} value={13} className={number === 13 ? \"disabledButton\" : \"buttonGroup\"}>13</ToggleButton>\n                                <ToggleButton disabled={number === 15 ? true : false} value={15} className={number === 15 ? \"disabledButton\" : \"buttonGroup\"}>15</ToggleButton>\n                            </ToggleButtonGroup>\n                        </Grid>\n                        <Grid item xs={2} sm={2} md={1} lg={1}></Grid>\n                    </Grid>\n                    <Grid item xs={1} sm={1} md={1} lg={1}></Grid>                    \n                </Grid>\n                    <Grid item xs={12} sm={12} md={12} lg={12}>\n                        <Grid container>\n                            <Grid item xs={4} sm={4} md={4} lg={4}></Grid>\n                            <Grid item xs={6} sm={6} md={6} lg={6}>\n                                <Button disabled={number === 0} variant=\"contained\" size=\"large\" className=\"startButton\" onClick={handleSettings}>Start Game</Button>\n                            </Grid>\n                            <Grid item xs={2} sm={2} md={2} lg={2}></Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Paper>\n            : null}\n            {startGame === false ? null : \n                <LivePlay numberPerRound={number}/>\n            }\n        </div>\n    )\n};","import React, { useState } from \"react\"\nimport SettingCard from \"../../components/card/settingCard/settingCard\"\nimport LivePlay from \"../../pages/game/liveplay/liveplay\"\n\n// Component that holds the SettingCard (and the game) component that is passed into the App component\n\nexport default function Game(props){\n\n    return (\n        <div>\n            <SettingCard/>\n        </div>\n    )\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport Nav from \"../src/components/nav/nav\"\nimport Footer from \"../src/components/footer/footer\"\nimport Landing from \"../src/pages/landing/landing\";\nimport Game from \"./pages/game/game\";\n\n// Main App Component featuring the Nav, Footer, and conditionally rendered pages in lieu of routing.\n\nexport default function App() {\n\n  const [landing, setLanding] = React.useState(true);\n  // Handler function for switching from landing to swettings page\n  const handleLanding = () => {\n    setLanding(false);\n    setStartSettings(true);\n  }\n\n  const [startSettings, setStartSettings] = React.useState(false);\n\n  return (\n    \n      <div>\n        <Nav/>\n        {landing == true ? <Landing mainLandingSettings={handleLanding}/> : null}\n        {landing == false? <Game/> : null}\n        <Footer/>\n      </div>\n    \n\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}