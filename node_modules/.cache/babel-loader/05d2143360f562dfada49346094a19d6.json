{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/abdulosman/Documents/GitHub/StrangersOrNot/src/pages/game/liveplay/liveplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport Card from \"../../../components/card/card\";\nimport { Grid } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport \"../../game/liveplay/liveplay.css\";\nimport axios from 'axios';\nexport default function LivePlay(props) {\n  _s();\n\n  let number = props.numberPerRound;\n  let [questionArray, setQuestionArray] = React.useState([]);\n  let [currentQuestion, setCurrentQuestion] = React.useState('');\n  let [currentLevel, setCurrentLevel] = React.useState('');\n  let [currentId, setCurrentId] = React.useState(0);\n  useEffect(() => {\n    let questions = [];\n    let count = 0;\n    axios.get('https://strangers-or-not.firebaseio.com/.json').then(res => {\n      let tempSet = new Set();\n\n      for (const [key, value] of Object.entries(res.data)) {\n        let tempArr = [];\n\n        while (count < number) {\n          let card_value = value[Math.floor(Math.random() * value.length)];\n\n          if (key === \"level1\") {\n            if (!tempArr.includes(card_value)) {\n              tempArr.push(card_value);\n              questions.push([\"Level 1: Perception\", card_value]);\n              count++;\n            }\n          } else if (key === \"level2\") {\n            if (!tempArr.includes(card_value)) {\n              tempArr.push(card_value);\n              questions.push([\"Level 2: Connection\", card_value]);\n              count++;\n            }\n          } else if (key === \"level3\") {\n            if (!tempArr.includes(card_value)) {\n              tempArr.push(card_value);\n              questions.push([\"Level 3: Reflection\", card_value]);\n              count++;\n            }\n          }\n        }\n\n        count = 0;\n      }\n\n      console.log(questions);\n      setQuestionArray(questions);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handlePrevious() {\n    setCurrentId(currentId - 1);\n  }\n\n  function handleNext() {\n    setCurrentId(currentId + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: questionArray.length > 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 2,\n        md: 2,\n        lg: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 8,\n        md: 8,\n        lg: 8,\n        className: \"gameStyling\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          className: \"numberStyling\",\n          children: [\"Card \", currentId + 1, \"/\", number * 3]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          title: questionArray[currentId][0],\n          question: questionArray[currentId][1],\n          brand: \"Strangers or Not\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: currentId < 1,\n          variant: \"outlined\",\n          className: \"prevButton prevNext\",\n          onClick: handlePrevious,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: currentId >= questionArray.length - 1,\n          variant: \"outlined\",\n          className: \"nextButton prevNext\",\n          onClick: handleNext,\n          children: currentId + 1 == number * 3 ? 'Final Card' : 'Next'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 2,\n        md: 2,\n        lg: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, currentId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this) : \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LivePlay, \"zxymv+ajPTeJgAx+9XMdcmqg4nk=\");\n\n_c = LivePlay;\n\nvar _c;\n\n$RefreshReg$(_c, \"LivePlay\");","map":{"version":3,"sources":["/Users/abdulosman/Documents/GitHub/StrangersOrNot/src/pages/game/liveplay/liveplay.js"],"names":["React","useState","useEffect","Typography","Card","Grid","Button","axios","LivePlay","props","number","numberPerRound","questionArray","setQuestionArray","currentQuestion","setCurrentQuestion","currentLevel","setCurrentLevel","currentId","setCurrentId","questions","count","get","then","res","tempSet","Set","key","value","Object","entries","data","tempArr","card_value","Math","floor","random","length","includes","push","console","log","catch","err","handlePrevious","handleNext"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,IAAP,MAAkB,+BAAlB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAO,kCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAAA;;AACnC,MAAIC,MAAM,GAAGD,KAAK,CAACE,cAAnB;AACA,MAAI,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCb,KAAK,CAACC,QAAN,CAAe,EAAf,CAAxC;AACA,MAAI,CAACa,eAAD,EAAkBC,kBAAlB,IAAwCf,KAAK,CAACC,QAAN,CAAe,EAAf,CAA5C;AACA,MAAI,CAACe,YAAD,EAAeC,eAAf,IAAkCjB,KAAK,CAACC,QAAN,CAAe,EAAf,CAAtC;AACA,MAAI,CAACiB,SAAD,EAAYC,YAAZ,IAA4BnB,KAAK,CAACC,QAAN,CAAe,CAAf,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIkB,SAAS,GAAG,EAAhB;AACA,QAAIC,KAAK,GAAG,CAAZ;AACAd,IAAAA,KAAK,CAACe,GAAN,CAAU,+CAAV,EACKC,IADL,CACUC,GAAG,IAAI;AACT,UAAIC,OAAO,GAAG,IAAIC,GAAJ,EAAd;;AACA,WAAK,MAAM,CAACC,GAAD,EAAMC,KAAN,CAAX,IAA2BC,MAAM,CAACC,OAAP,CAAeN,GAAG,CAACO,IAAnB,CAA3B,EAAoD;AAChD,YAAIC,OAAO,GAAG,EAAd;;AACA,eAAOX,KAAK,GAAGX,MAAf,EAAsB;AAClB,cAAIuB,UAAU,GAAGL,KAAK,CAACM,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgBR,KAAK,CAACS,MAAlC,CAAD,CAAtB;;AACA,cAAIV,GAAG,KAAK,QAAZ,EAAqB;AACjB,gBAAG,CAACK,OAAO,CAACM,QAAR,CAAiBL,UAAjB,CAAJ,EAAiC;AAC7BD,cAAAA,OAAO,CAACO,IAAR,CAAaN,UAAb;AACAb,cAAAA,SAAS,CAACmB,IAAV,CAAe,CAAC,qBAAD,EAAwBN,UAAxB,CAAf;AACAZ,cAAAA,KAAK;AACR;AACJ,WAND,MAOK,IAAIM,GAAG,KAAK,QAAZ,EAAqB;AACtB,gBAAG,CAACK,OAAO,CAACM,QAAR,CAAiBL,UAAjB,CAAJ,EAAiC;AAC7BD,cAAAA,OAAO,CAACO,IAAR,CAAaN,UAAb;AACAb,cAAAA,SAAS,CAACmB,IAAV,CAAe,CAAC,qBAAD,EAAwBN,UAAxB,CAAf;AACAZ,cAAAA,KAAK;AACR;AACJ,WANI,MAOA,IAAIM,GAAG,KAAK,QAAZ,EAAqB;AACtB,gBAAG,CAACK,OAAO,CAACM,QAAR,CAAiBL,UAAjB,CAAJ,EAAiC;AAC7BD,cAAAA,OAAO,CAACO,IAAR,CAAaN,UAAb;AACAb,cAAAA,SAAS,CAACmB,IAAV,CAAe,CAAC,qBAAD,EAAwBN,UAAxB,CAAf;AACAZ,cAAAA,KAAK;AACR;AACJ;AACJ;;AACDA,QAAAA,KAAK,GAAG,CAAR;AACH;;AACDmB,MAAAA,OAAO,CAACC,GAAR,CAAYrB,SAAZ;AACAP,MAAAA,gBAAgB,CAACO,SAAD,CAAhB;AACH,KAjCL,EAkCKsB,KAlCL,CAkCWC,GAAG,IAAI;AACVH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,KApCL;AAqCH,GAxCQ,EAwCN,EAxCM,CAAT;;AA0CA,WAASC,cAAT,GAA0B;AACtBzB,IAAAA,YAAY,CAACD,SAAS,GAAG,CAAb,CAAZ;AACH;;AAED,WAAS2B,UAAT,GAAsB;AAClB1B,IAAAA,YAAY,CAACD,SAAS,GAAG,CAAb,CAAZ;AACH;;AAED,sBACI;AAAA,cACKN,aAAa,CAACyB,MAAd,GAAuB,CAAvB,gBACD,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAyB,QAAA,EAAE,EAAE;AAA7B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAA0B,QAAA,EAAE,EAAE,CAA9B;AAAiC,QAAA,EAAE,EAAE,CAArC;AAAwC,QAAA,SAAS,EAAC,aAAlD;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,SAAS,EAAC,eAAnC;AAAA,8BAAyDnB,SAAS,GAAC,CAAnE,OAAuER,MAAM,GAAC,CAA9E;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAEE,aAAa,CAACM,SAAD,CAAb,CAAyB,CAAzB,CAAb;AAA0C,UAAA,QAAQ,EAAEN,aAAa,CAACM,SAAD,CAAb,CAAyB,CAAzB,CAApD;AAAiF,UAAA,KAAK,EAAC;AAAvF;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAEA,SAAS,GAAG,CAA9B;AAAiC,UAAA,OAAO,EAAC,UAAzC;AAAoD,UAAA,SAAS,EAAC,qBAA9D;AAAoF,UAAA,OAAO,EAAE0B,cAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAE1B,SAAS,IAAIN,aAAa,CAACyB,MAAd,GAAqB,CAApD;AAAuD,UAAA,OAAO,EAAC,UAA/D;AAA0E,UAAA,SAAS,EAAC,qBAApF;AAA0G,UAAA,OAAO,EAAEQ,UAAnH;AAAA,oBAAgI3B,SAAS,GAAC,CAAV,IAAeR,MAAM,GAAC,CAAtB,GAA0B,YAA1B,GAAyC;AAAzK;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAQI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAyB,QAAA,EAAE,EAAE;AAA7B;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA,OAAqBQ,SAArB;AAAA;AAAA;AAAA;AAAA,YADC,GAWH;AAZF;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAzEuBV,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Typography } from \"@material-ui/core\"\nimport Card  from \"../../../components/card/card\"\nimport { Grid } from \"@material-ui/core\"\nimport { Button } from \"@material-ui/core\"\nimport \"../../game/liveplay/liveplay.css\"\nimport axios from 'axios';\n\n\nexport default function LivePlay(props){\n    let number = props.numberPerRound;\n    let [questionArray, setQuestionArray] = React.useState([])\n    let [currentQuestion, setCurrentQuestion] = React.useState('');\n    let [currentLevel, setCurrentLevel] = React.useState('');\n    let [currentId, setCurrentId] = React.useState(0);\n\n    useEffect(() => {\n        let questions = [];\n        let count = 0;\n        axios.get('https://strangers-or-not.firebaseio.com/.json')\n            .then(res => {\n                let tempSet = new Set();\n                for (const [key, value] of Object.entries(res.data)){\n                    let tempArr = [];\n                    while (count < number){\n                        let card_value = value[Math.floor((Math.random() * value.length))];\n                        if (key === \"level1\"){\n                            if(!tempArr.includes(card_value)){\n                                tempArr.push(card_value);\n                                questions.push([\"Level 1: Perception\", card_value]);\n                                count++;\n                            }\n                        }\n                        else if (key === \"level2\"){\n                            if(!tempArr.includes(card_value)){\n                                tempArr.push(card_value);\n                                questions.push([\"Level 2: Connection\", card_value]);\n                                count++;\n                            }\n                        }\n                        else if (key === \"level3\"){\n                            if(!tempArr.includes(card_value)){\n                                tempArr.push(card_value);\n                                questions.push([\"Level 3: Reflection\", card_value]);\n                                count++;\n                            }\n                        }\n                    }\n                    count = 0;\n                }\n                console.log(questions);\n                setQuestionArray(questions);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, [])\n\n    function handlePrevious() {\n        setCurrentId(currentId - 1);\n    }\n\n    function handleNext() {\n        setCurrentId(currentId + 1);\n    }\n    \n    return (\n        <div>\n            {questionArray.length > 0 ? \n            <Grid container key={currentId}>\n                <Grid item sm={2} md={2} lg={2}></Grid>\n                <Grid item xs={12} sm={8} md={8} lg={8} className=\"gameStyling\">\n                    <Typography variant=\"h5\" className=\"numberStyling\">Card {currentId+1}/{number*3}</Typography>\n                    <Card title={questionArray[currentId][0]} question={questionArray[currentId][1]} brand=\"Strangers or Not\"/>\n                    <Button disabled={currentId < 1} variant=\"outlined\" className=\"prevButton prevNext\" onClick={handlePrevious}>Previous</Button>\n                    <Button disabled={currentId >= questionArray.length-1} variant=\"outlined\" className=\"nextButton prevNext\" onClick={handleNext}>{currentId+1 == number*3 ? 'Final Card' : 'Next'}</Button>\n                </Grid>\n                <Grid item sm={2} md={2} lg={2}></Grid>\n            </Grid>\n        : \"Loading...\"}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}