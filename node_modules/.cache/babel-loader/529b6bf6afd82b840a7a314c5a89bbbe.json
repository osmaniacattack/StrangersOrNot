{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/abdulosman/Desktop/StrangersGame/strangers-game/src/pages/game/liveplay/liveplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport Card from \"../../../components/card/card\";\nimport { Grid } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport \"../../game/liveplay/liveplay.css\";\nimport axios from 'axios';\nexport default function LivePlay(props) {\n  _s();\n\n  let number = props.numberPerRound;\n  let questionCount = 1;\n  let questionArray = [];\n  let questionComponents;\n  useEffect(() => {\n    let questions = [];\n    let count = 0;\n    axios.get('https://strangers-or-not.firebaseio.com/.json').then(res => {\n      for (const [key, value] of Object.entries(res.data)) {\n        while (count < number) {\n          if (key == \"level1\") {\n            questions.push([\"Level 1: Perception\", value[Math.floor(Math.random() * value.length)]]);\n            count++;\n          } else if (key == \"level2\") {\n            questions.push([\"Level 2: Connection\", value[Math.floor(Math.random() * value.length)]]);\n            count++;\n          } else if (key == \"level3\") {\n            questions.push([\"Level 3: Reflection\", value[Math.floor(Math.random() * value.length)]]);\n            count++;\n          }\n        }\n\n        count = 0;\n      }\n\n      questionArray = questions;\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: questionArray.map((question, id) => {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 2,\n          md: 2,\n          lg: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 8,\n          md: 8,\n          lg: 8,\n          className: \"gameStyling\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            className: \"numberStyling\",\n            children: [\"Card \", id, \"/\", number * 3]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            title: question[0],\n            question: question[1],\n            brand: \"Strangers or Not\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            className: \"prevButton prevNext\",\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            className: \"nextButton prevNext\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 2,\n          md: 2,\n          lg: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 20\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LivePlay, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = LivePlay;\n\nvar _c;\n\n$RefreshReg$(_c, \"LivePlay\");","map":{"version":3,"sources":["/Users/abdulosman/Desktop/StrangersGame/strangers-game/src/pages/game/liveplay/liveplay.js"],"names":["React","useState","useEffect","Typography","Card","Grid","Button","axios","LivePlay","props","number","numberPerRound","questionCount","questionArray","questionComponents","questions","count","get","then","res","key","value","Object","entries","data","push","Math","floor","random","length","catch","err","console","log","map","question","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Typography } from \"@material-ui/core\"\nimport Card  from \"../../../components/card/card\"\nimport { Grid } from \"@material-ui/core\"\nimport { Button } from \"@material-ui/core\"\nimport \"../../game/liveplay/liveplay.css\"\nimport axios from 'axios';\n\n\nexport default function LivePlay(props){\n    let number = props.numberPerRound;\n\n    let questionCount = 1;\n    let questionArray = [];\n    let questionComponents;\n\n    useEffect(() => {\n        let questions = [];\n        let count = 0;\n        axios.get('https://strangers-or-not.firebaseio.com/.json')\n            .then(res => {\n                for (const [key, value] of Object.entries(res.data)){\n                    while (count < number){\n                        if (key == \"level1\"){\n                            questions.push([\"Level 1: Perception\", value[Math.floor((Math.random() * value.length))]]);\n                            count++;\n                        }\n                        else if (key == \"level2\"){\n                            questions.push([\"Level 2: Connection\", value[Math.floor((Math.random() * value.length))]]);\n                            count++;\n                        }\n                        else if (key == \"level3\"){\n                            questions.push([\"Level 3: Reflection\", value[Math.floor((Math.random() * value.length))]]);\n                            count++;\n                        }\n                    }\n                    count = 0;\n                }\n                questionArray = questions;\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, [])\n\n\n    return (\n        <div>\n            {questionArray.map((question, id) => {\n            return <Grid container key={id}>\n            <Grid item sm={2} md={2} lg={2}></Grid>\n            <Grid item xs={12} sm={8} md={8} lg={8} className=\"gameStyling\">\n                <Typography variant=\"h5\" className=\"numberStyling\">Card {id}/{number*3}</Typography>\n                <Card title={question[0]} question={question[1]} brand=\"Strangers or Not\"/>\n                <Button variant=\"outlined\" className=\"prevButton prevNext\">Previous</Button>\n                <Button variant=\"outlined\" className=\"nextButton prevNext\">Next</Button>\n            </Grid>\n            <Grid item sm={2} md={2} lg={2}></Grid>\n        </Grid>\n    })}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}