{"ast":null,"code":"import _slicedToArray from\"/Users/abdulosman/Documents/GitHub/StrangersOrNot/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState,useEffect}from\"react\";import{Typography}from\"@material-ui/core\";import{Button}from\"@material-ui/core\";import ToggleButton from'@material-ui/lab/ToggleButton';import ToggleButtonGroup from'@material-ui/lab/ToggleButtonGroup';import{Paper}from\"@material-ui/core\";import{Grid}from\"@material-ui/core\";import LivePlay from\"../../../pages/game/liveplay/liveplay\";import\"../settingCard/settingCard.css\";// Component used to customize game settings and initialize game play\nexport default function SettingCard(props){var _React$useState=React.useState(true),_React$useState2=_slicedToArray(_React$useState,2),startSettings=_React$useState2[0],setStartSettings=_React$useState2[1];// State for toggling from setting card to game card\nvar handleSettings=function handleSettings(){setStartSettings(false);setStartGame(true);};var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),startGame=_React$useState4[0],setStartGame=_React$useState4[1];var _React$useState5=React.useState(0),_React$useState6=_slicedToArray(_React$useState5,2),number=_React$useState6[0],setNumber=_React$useState6[1];// State for holding the number of cards to pass to child component\nvar handleChange=function handleChange(e,newNumber){setNumber(newNumber);};return/*#__PURE__*/ (// Conditional rendering the setting card if settings have not been chosen yet.\n_jsxs(\"div\",{children:[startSettings===true?/*#__PURE__*/_jsx(Paper,{elevation:7,className:\"paperSetting\",children:/*#__PURE__*/_jsxs(Grid,{container:true,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:12,md:12,lg:12,children:/*#__PURE__*/_jsxs(Typography,{align:\"center\",className:\"cardLevel\",variant:\"h4\",children:[\"How many cards do you \",/*#__PURE__*/_jsx(\"br\",{}),\"want to play per level?\"]})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:12,md:12,lg:12,children:[/*#__PURE__*/_jsxs(Grid,{container:true,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:2,sm:2,md:2,lg:2}),/*#__PURE__*/_jsx(Grid,{container:true,item:true,xs:8,sm:8,md:8,lg:8,justify:\"center\",children:/*#__PURE__*/_jsxs(ToggleButtonGroup,{value:number,exclusive:true,onChange:handleChange,className:\"groupSpace\",children:[/*#__PURE__*/_jsx(ToggleButton,{disabled:number===3?true:false,value:3,className:number===3?\"disabledButton\":\"buttonGroup\",children:\"3\"}),/*#__PURE__*/_jsx(ToggleButton,{disabled:number===5?true:false,value:5,className:number===5?\"disabledButton\":\"buttonGroup\",children:\"5\"}),/*#__PURE__*/_jsx(ToggleButton,{disabled:number===7?true:false,value:7,className:number===7?\"disabledButton\":\"buttonGroup\",children:\"7\"}),/*#__PURE__*/_jsx(ToggleButton,{disabled:number===9?true:false,value:9,className:number===9?\"disabledButton\":\"buttonGroup\",children:\"9\"}),/*#__PURE__*/_jsx(ToggleButton,{disabled:number===11?true:false,value:11,className:number===11?\"disabledButton\":\"buttonGroup\",children:\"11\"}),/*#__PURE__*/_jsx(ToggleButton,{disabled:number===13?true:false,value:13,className:number===13?\"disabledButton\":\"buttonGroup\",children:\"13\"}),/*#__PURE__*/_jsx(ToggleButton,{disabled:number===15?true:false,value:15,className:number===15?\"disabledButton\":\"buttonGroup\",children:\"15\"})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:2,sm:2,md:1,lg:1})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:1,sm:1,md:1,lg:1})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:12,md:12,lg:12,children:/*#__PURE__*/_jsxs(Grid,{container:true,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:4,sm:4,md:4,lg:4}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,sm:6,md:6,lg:6,children:/*#__PURE__*/_jsx(Button,{disabled:number===0,variant:\"contained\",size:\"large\",className:\"startButton\",onClick:handleSettings,children:\"Start Game\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:2,sm:2,md:2,lg:2})]})})]})}):null,startGame===false?null:/*#__PURE__*/_jsx(LivePlay,{numberPerRound:number})]}));};","map":{"version":3,"sources":["/Users/abdulosman/Documents/GitHub/StrangersOrNot/src/components/card/settingCard/settingCard.js"],"names":["React","useState","useEffect","Typography","Button","ToggleButton","ToggleButtonGroup","Paper","Grid","LivePlay","SettingCard","props","startSettings","setStartSettings","handleSettings","setStartGame","startGame","number","setNumber","handleChange","e","newNumber"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Typography } from \"@material-ui/core\"\nimport { Button } from \"@material-ui/core\"\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { Paper } from \"@material-ui/core\"\nimport { Grid } from \"@material-ui/core\"\nimport LivePlay from \"../../../pages/game/liveplay/liveplay\";\nimport \"../settingCard/settingCard.css\"\n\n// Component used to customize game settings and initialize game play\n\nexport default function SettingCard(props){\n    const [startSettings, setStartSettings] = React.useState(true); // State for toggling from setting card to game card\n    const handleSettings = () => {\n      setStartSettings(false);\n      setStartGame(true);\n    }\n\n    const [startGame, setStartGame] = React.useState(false);\n\n    const [number, setNumber] = React.useState(0); // State for holding the number of cards to pass to child component\n    const handleChange = (e, newNumber) => {\n        setNumber(newNumber);\n    }\n\n\n    return(\n        // Conditional rendering the setting card if settings have not been chosen yet.\n        <div>\n            {startSettings === true ? \n            <Paper elevation={7} className=\"paperSetting\">\n                <Grid container>\n                    <Grid item xs={12} sm={12} md={12} lg={12}>\n                        <Typography align=\"center\" className=\"cardLevel\" variant=\"h4\">How many cards do you <br/>want to play per level?</Typography>\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={12} lg={12}>\n                        <Grid container>\n                        <Grid item xs={2} sm={2} md={2} lg={2}></Grid>\n                        <Grid container item xs={8} sm={8} md={8} lg={8} justify=\"center\">\n                            <ToggleButtonGroup value={number} exclusive onChange={handleChange} className=\"groupSpace\">\n                                <ToggleButton disabled={number === 3 ? true : false} value={3} className={number === 3 ? \"disabledButton\" : \"buttonGroup\"}>3</ToggleButton>\n                                <ToggleButton disabled={number === 5 ? true : false} value={5} className={number === 5 ? \"disabledButton\" : \"buttonGroup\"}>5</ToggleButton>\n                                <ToggleButton disabled={number === 7 ? true : false} value={7} className={number === 7 ? \"disabledButton\" : \"buttonGroup\"}>7</ToggleButton>\n                                <ToggleButton disabled={number === 9 ? true : false} value={9} className={number === 9 ? \"disabledButton\" : \"buttonGroup\"}>9</ToggleButton>\n                                <ToggleButton disabled={number === 11 ? true : false} value={11} className={number === 11 ? \"disabledButton\" : \"buttonGroup\"}>11</ToggleButton>\n                                <ToggleButton disabled={number === 13 ? true : false} value={13} className={number === 13 ? \"disabledButton\" : \"buttonGroup\"}>13</ToggleButton>\n                                <ToggleButton disabled={number === 15 ? true : false} value={15} className={number === 15 ? \"disabledButton\" : \"buttonGroup\"}>15</ToggleButton>\n                            </ToggleButtonGroup>\n                        </Grid>\n                        <Grid item xs={2} sm={2} md={1} lg={1}></Grid>\n                    </Grid>\n                    <Grid item xs={1} sm={1} md={1} lg={1}></Grid>                    \n                </Grid>\n                    <Grid item xs={12} sm={12} md={12} lg={12}>\n                        <Grid container>\n                            <Grid item xs={4} sm={4} md={4} lg={4}></Grid>\n                            <Grid item xs={6} sm={6} md={6} lg={6}>\n                                <Button disabled={number === 0} variant=\"contained\" size=\"large\" className=\"startButton\" onClick={handleSettings}>Start Game</Button>\n                            </Grid>\n                            <Grid item xs={2} sm={2} md={2} lg={2}></Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Paper>\n            : null}\n            {startGame === false ? null : \n                <LivePlay numberPerRound={number}/>\n            }\n        </div>\n    )\n};"]},"metadata":{},"sourceType":"module"}