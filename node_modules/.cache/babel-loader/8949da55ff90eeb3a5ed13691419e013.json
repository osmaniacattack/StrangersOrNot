{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/abdulosman/Documents/GitHub/StrangersOrNot/src/pages/game/liveplay/liveplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport Card from \"../../../components/card/card\";\nimport { Grid } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport \"../../game/liveplay/liveplay.css\";\nimport axios from 'axios';\nexport default function LivePlay(props) {\n  _s();\n\n  let number = props.numberPerRound;\n  let [questionArray, setQuestionArray] = React.useState([]);\n  let [currentQuestion, setCurrentQuestion] = React.useState('');\n  let [currentLevel, setCurrentLevel] = React.useState('');\n  let [currentId, setCurrentId] = React.useState(1);\n  useEffect(() => {\n    let questions = [];\n    let count = 0;\n    axios.get('https://strangers-or-not.firebaseio.com/.json').then(res => {\n      for (const [key, value] of Object.entries(res.data)) {\n        while (count < number) {\n          if (key == \"level1\") {\n            questions.push([\"Level 1: Perception\", value[Math.floor(Math.random() * value.length)]]);\n            count++;\n          } else if (key == \"level2\") {\n            questions.push([\"Level 2: Connection\", value[Math.floor(Math.random() * value.length)]]);\n            count++;\n          } else if (key == \"level3\") {\n            questions.push([\"Level 3: Reflection\", value[Math.floor(Math.random() * value.length)]]);\n            count++;\n          }\n        }\n\n        count = 0;\n      }\n\n      setQuestionArray(questions);\n      setCurrentQuestion(questions[currentId - 1][1]);\n      setCurrentLevel(questions[currentId - 1][0]);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handlePrevious() {\n    setCurrentQuestion(questionArray[currentId - 1][1]);\n    setCurrentLevel(questionArray[currentId - 1][0]);\n    setCurrentId(currentId--);\n  }\n\n  function handleNext() {\n    setCurrentQuestion(questionArray[currentId - 1][1]);\n    setCurrentLevel(questionArray[currentId - 1][0]);\n    setCurrentId(currentId++);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: questionArray.length > 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 2,\n        md: 2,\n        lg: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 8,\n        md: 8,\n        lg: 8,\n        className: \"gameStyling\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          className: \"numberStyling\",\n          children: [\"Card \", currentId, \"/\", number * 3]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          title: currentLevel,\n          question: currentQuestion,\n          brand: \"Strangers or Not\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: currentId <= 1,\n          disableRipple: true,\n          variant: \"outlined\",\n          className: \"prevButton prevNext\",\n          onMouseDown: handlePrevious,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: currentId >= questionArray.length,\n          disableRipple: true,\n          variant: \"outlined\",\n          className: \"nextButton prevNext\",\n          onMouseDown: handleNext,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 2,\n        md: 2,\n        lg: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, currentId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this) : \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LivePlay, \"zBsm+FnbaU4Kg+pNeqIvd3Bzjwc=\");\n\n_c = LivePlay;\n\nvar _c;\n\n$RefreshReg$(_c, \"LivePlay\");","map":{"version":3,"sources":["/Users/abdulosman/Documents/GitHub/StrangersOrNot/src/pages/game/liveplay/liveplay.js"],"names":["React","useState","useEffect","Typography","Card","Grid","Button","axios","LivePlay","props","number","numberPerRound","questionArray","setQuestionArray","currentQuestion","setCurrentQuestion","currentLevel","setCurrentLevel","currentId","setCurrentId","questions","count","get","then","res","key","value","Object","entries","data","push","Math","floor","random","length","catch","err","console","log","handlePrevious","handleNext"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Typography } from \"@material-ui/core\"\nimport Card  from \"../../../components/card/card\"\nimport { Grid } from \"@material-ui/core\"\nimport { Button } from \"@material-ui/core\"\nimport \"../../game/liveplay/liveplay.css\"\nimport axios from 'axios';\n\n\nexport default function LivePlay(props){\n    let number = props.numberPerRound;\n    let [questionArray, setQuestionArray] = React.useState([])\n    let [currentQuestion, setCurrentQuestion] = React.useState('');\n    let [currentLevel, setCurrentLevel] = React.useState('');\n    let [currentId, setCurrentId] = React.useState(1);\n\n    useEffect(() => {\n        let questions = [];\n        let count = 0;\n        axios.get('https://strangers-or-not.firebaseio.com/.json')\n            .then(res => {\n                for (const [key, value] of Object.entries(res.data)){\n                    while (count < number){\n                        if (key == \"level1\"){\n                            questions.push([\"Level 1: Perception\", value[Math.floor((Math.random() * value.length))]]);\n                            count++;\n                        }\n                        else if (key == \"level2\"){\n                            questions.push([\"Level 2: Connection\", value[Math.floor((Math.random() * value.length))]]);\n                            count++;\n                        }\n                        else if (key == \"level3\"){\n                            questions.push([\"Level 3: Reflection\", value[Math.floor((Math.random() * value.length))]]);\n                            count++;\n                        }\n                    }\n                    count = 0;\n                }\n                setQuestionArray(questions);\n                setCurrentQuestion(questions[currentId-1][1]);\n                setCurrentLevel(questions[currentId-1][0]);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, [])\n\n    function handlePrevious() {\n        setCurrentQuestion(questionArray[currentId-1][1])\n        setCurrentLevel(questionArray[currentId-1][0])\n        setCurrentId(currentId--);\n    }\n\n    function handleNext() {\n        setCurrentQuestion(questionArray[currentId-1][1])\n        setCurrentLevel(questionArray[currentId-1][0])\n        setCurrentId(currentId++);\n    }\n    \n    return (\n        <div>\n            {questionArray.length > 0 ? \n            <Grid container key={currentId}>\n                <Grid item sm={2} md={2} lg={2}></Grid>\n                <Grid item xs={12} sm={8} md={8} lg={8} className=\"gameStyling\">\n                    <Typography variant=\"h5\" className=\"numberStyling\">Card {currentId}/{number*3}</Typography>\n                    <Card title={currentLevel} question={currentQuestion} brand=\"Strangers or Not\"/>\n                    <Button disabled={currentId <= 1} disableRipple variant=\"outlined\" className=\"prevButton prevNext\" onMouseDown={handlePrevious}>Previous</Button>\n                    <Button disabled={currentId >= questionArray.length} disableRipple variant=\"outlined\" className=\"nextButton prevNext\" onMouseDown={handleNext}>Next</Button>\n                </Grid>\n                <Grid item sm={2} md={2} lg={2}></Grid>\n            </Grid>\n        : \"Loading...\"}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}