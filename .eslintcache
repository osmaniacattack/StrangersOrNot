[{"/Users/abdulosman/Documents/GitHub/StrangersOrNot/src/index.js":"1","/Users/abdulosman/Documents/GitHub/StrangersOrNot/src/App.js":"2","/Users/abdulosman/Documents/GitHub/StrangersOrNot/src/reportWebVitals.js":"3","/Users/abdulosman/Documents/GitHub/StrangersOrNot/src/pages/landing/landing.js":"4","/Users/abdulosman/Documents/GitHub/StrangersOrNot/src/components/nav/nav.js":"5","/Users/abdulosman/Documents/GitHub/StrangersOrNot/src/components/footer/footer.js":"6","/Users/abdulosman/Documents/GitHub/StrangersOrNot/src/pages/game/game.js":"7","/Users/abdulosman/Documents/GitHub/StrangersOrNot/src/components/card/headingCard/headingCard.js":"8","/Users/abdulosman/Documents/GitHub/StrangersOrNot/src/components/card/card.js":"9","/Users/abdulosman/Documents/GitHub/StrangersOrNot/src/components/card/landingCard/landingCard.js":"10","/Users/abdulosman/Documents/GitHub/StrangersOrNot/src/components/card/settingCard/settingCard.js":"11","/Users/abdulosman/Documents/GitHub/StrangersOrNot/src/pages/game/liveplay/liveplay.js":"12","/Users/abdulosman/Documents/GitHub/StrangersOrNot/src/components/form/ContactForm.js":"13"},{"size":634,"mtime":1607825217713,"results":"14","hashOfConfig":"15"},{"size":1228,"mtime":1607846202662,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1607825217715,"results":"17","hashOfConfig":"15"},{"size":8968,"mtime":1607847661733,"results":"18","hashOfConfig":"15"},{"size":1399,"mtime":1607825217712,"results":"19","hashOfConfig":"15"},{"size":962,"mtime":1607846965058,"results":"20","hashOfConfig":"15"},{"size":391,"mtime":1607825217714,"results":"21","hashOfConfig":"15"},{"size":1129,"mtime":1607825217711,"results":"22","hashOfConfig":"15"},{"size":1303,"mtime":1607825217710,"results":"23","hashOfConfig":"15"},{"size":2080,"mtime":1607825217711,"results":"24","hashOfConfig":"15"},{"size":4215,"mtime":1607825217712,"results":"25","hashOfConfig":"15"},{"size":4370,"mtime":1607825217714,"results":"26","hashOfConfig":"15"},{"size":3091,"mtime":1607909706930,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"nqfild",{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"30"},"/Users/abdulosman/Documents/GitHub/StrangersOrNot/src/index.js",[],["64","65"],"/Users/abdulosman/Documents/GitHub/StrangersOrNot/src/App.js",["66","67","68","69","70"],"import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Nav from \"../src/components/nav/nav\"\nimport Footer from \"../src/components/footer/footer\"\nimport Landing from \"../src/pages/landing/landing\";\nimport Game from \"./pages/game/game\";\nimport ReactGA from 'react-ga';\nimport ContactForm from './components/form/ContactForm';\n\n\n// Main App Component featuring the Nav, Footer, and conditionally rendered pages in lieu of routing.\n\n\nexport default function App() {\n\n  useEffect(() => {\n    ReactGA.initialize('G-YDYM1JSKPW');\n    ReactGA.pageview(window.location.pathname + window.location.search);\n\n    ReactGA.initialize('G-3RSRD6CGSL');\n    ReactGA.pageview(window.location.pathname + window.location.search);\n  })\n\n  const [landing, setLanding] = React.useState(true);\n  // Handler function for switching from landing to swettings page\n  const handleLanding = () => {\n    setLanding(false);\n    setStartSettings(true);\n  }\n\n  const [startSettings, setStartSettings] = React.useState(false);\n\n  return (\n    <div>\n        <Nav/>\n        {landing == true ? <Landing mainLandingSettings={handleLanding}/> : null}\n        {landing == false? <Game/> : null}\n        <Footer/>\n      </div>\n      \n    \n\n  );\n}","/Users/abdulosman/Documents/GitHub/StrangersOrNot/src/reportWebVitals.js",[],"/Users/abdulosman/Documents/GitHub/StrangersOrNot/src/pages/landing/landing.js",[],"/Users/abdulosman/Documents/GitHub/StrangersOrNot/src/components/nav/nav.js",["71","72"],"import React, { useState } from 'react';\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Switch from \"@material-ui/core/Switch\";\nimport Button from '@material-ui/core/Button';\nimport '../nav/nav.css'\n\n// Navigation Bar Component\n\nexport default function Nav() {\n  const [theme, setTheme] = useState(true);\n  const appliedTheme = createMuiTheme(theme ? light : dark); // Used to toggle the dark mode feature\n\n  const handleThemeChange = () => {\n    setTheme(!theme);\n  };\n\n  return (\n    <ThemeProvider theme={appliedTheme}>\n      <CssBaseline />\n      <AppBar position=\"static\" className=\"nav\">\n        <Toolbar>\n          <Typography variant=\"h5\" className=\"title\"><a style={{textDecoration: 'none', color: 'white'}} href=\"https://strangers-or-not.vercel.app/\">STRANGERS OR NOT</a></Typography>\n          <span className=\"buttonSpan\">\n            <Switch style={{color:\"white\"}} checked={theme} onChange={handleThemeChange} />\n          </span>\n        </Toolbar>\n      </AppBar>\n    </ThemeProvider>\n  );\n}\n\nexport const light = {\n    palette: {\n        type: \"light\"\n    }\n};\n\nexport const dark = {\n    palette: {\n        type: \"dark\"\n    }\n};","/Users/abdulosman/Documents/GitHub/StrangersOrNot/src/components/footer/footer.js",[],"/Users/abdulosman/Documents/GitHub/StrangersOrNot/src/pages/game/game.js",["73","74"],"import React, { useState } from \"react\"\nimport SettingCard from \"../../components/card/settingCard/settingCard\"\nimport LivePlay from \"../../pages/game/liveplay/liveplay\"\n\n// Component that holds the SettingCard (and the game) component that is passed into the App component\n\nexport default function Game(props){\n\n    return (\n        <div>\n            <SettingCard/>\n        </div>\n    )\n};\n","/Users/abdulosman/Documents/GitHub/StrangersOrNot/src/components/card/headingCard/headingCard.js",["75","76","77","78","79"],"import React from \"react\";\nimport { Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport PeepThree from '../../../assets/peep-three.png';\nimport PeepFour from '../../../assets/peep-four.png';\nimport \"../headingCard/headingCard.css\";\n\n// A card component used as \"headers\" for the landing page\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      '& > *': {\n        margin: theme.spacing(1),\n        width: theme.spacing(16),\n        height: theme.spacing(16),\n      },\n    },\n  }));\n  \nexport default function LandingCard(props){ //add props\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Paper elevation={7} className=\"headingCard\">\n                {props.peep == 'three' ? <img src={PeepThree} className=\"peepThree\"/> : null}\n                <Typography variant=\"h2\" className=\"textSpace\">{props.heading}</Typography>\n                {props.peep == 'four' ? <img src={PeepFour} className=\"peepFour\"/> : null}\n            </Paper>\n        </div>\n    )\n};","/Users/abdulosman/Documents/GitHub/StrangersOrNot/src/components/card/card.js",["80"],"import React from \"react\";\nimport { Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport \"../card/card.css\";\nimport { Grid } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\n\n// General card component used for the live game play and for instructions on the landing page\n\nexport default function Card(props){ \n    return (\n        <div>\n            <Paper elevation={7} className=\"paper\">\n                <Grid container>\n                    <Grid item xs={12} sm={12} md={12} lg={12}>\n                        <Typography align=\"center\" className=\"cardLevel\" variant=\"h6\" style={{margin: \"2rem 0 0 0\"}}>{props.title}</Typography>\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={12} lg={12}>\n                        <Typography align=\"center\" variant=\"h5\" className=\"cardQuestion\" style={{margin: \"1rem\"}}>{props.question}</Typography>\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={12} lg={12} style={{marginBottom: \"700px\"}}>\n                        <Typography align=\"center\" variant=\"h6\" className=\"cardBranding\">{props.brand ? props.brand: 'Strangers Or Not'}</Typography>\n                    </Grid>\n                </Grid>\n            </Paper>\n        </div>\n    )\n};","/Users/abdulosman/Documents/GitHub/StrangersOrNot/src/components/card/landingCard/landingCard.js",["81","82","83"],"import React, { useState } from \"react\";\nimport { Paper } from '@material-ui/core';\nimport { Grid } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport PeepOne from '../../../assets/peep-one.png';\nimport PeepTwo from '../../../assets/peep-two.png';\nimport \"../landingCard/landingCard.css\";\n\n// Component for the landing card a user see's at the first visit\n\nexport default function LandingCard(props){\n    let learnButton = props.learnButton;\n\n    return (\n        <div>\n            <Paper elevation={7} className=\"paper\">\n                <img src={PeepOne} className=\"peepOne\"/>\n                <img src={PeepTwo} className=\"peepTwo\"/>\n                <Grid container>\n                    <Grid item xs={12} sm={12} md={12} lg={12}>\n                        <Typography align=\"center\" className=\"cardTitle\" variant=\"h2\">{props.title}</Typography>\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={12} lg={12}>\n                        <Typography align=\"center\" variant=\"h6\" className=\"cardDescription\">{props.center}</Typography>\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={12} lg={12}>\n                        <Grid container>\n                            <Grid item xs={3} sm={3} md={3} lg={3}></Grid>\n                            <Grid item xs={7} sm={7} md={7} lg={7}>\n                                {learnButton === true ? <Button variant=\"contained\" size=\"medium\" className=\"landingButtons leftButton\"><a href=\"#aboutSection\" style={{textDecoration: 'none', color: 'white'}}>Learn to Play</a></Button> : null}\n                                <Button variant=\"contained\" size=\"medium\" className=\"landingButtons rightButton\" onClick={props.changeLandingToSettings}>Play Game</Button>\n                            </Grid>\n                            <Grid item xs={2} sm={2} md={2} lg={2}></Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                \n            </Paper>\n        </div>\n    )\n};","/Users/abdulosman/Documents/GitHub/StrangersOrNot/src/components/card/settingCard/settingCard.js",["84","85"],"import React, { useState, useEffect } from \"react\"\nimport { Typography } from \"@material-ui/core\"\nimport { Button } from \"@material-ui/core\"\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { Paper } from \"@material-ui/core\"\nimport { Grid } from \"@material-ui/core\"\nimport LivePlay from \"../../../pages/game/liveplay/liveplay\";\nimport \"../settingCard/settingCard.css\"\n\n// Component used to customize game settings and initialize game play\n\nexport default function SettingCard(props){\n    const [startSettings, setStartSettings] = React.useState(true); // State for toggling from setting card to game card\n    const handleSettings = () => {\n      setStartSettings(false);\n      setStartGame(true);\n    }\n\n    const [startGame, setStartGame] = React.useState(false);\n\n    const [number, setNumber] = React.useState(0); // State for holding the number of cards to pass to child component\n    const handleChange = (e, newNumber) => {\n        setNumber(newNumber);\n    }\n\n\n    return(\n        // Conditional rendering the setting card if settings have not been chosen yet.\n        <div>\n            {startSettings === true ? \n            <Paper elevation={7} className=\"paperSetting\">\n                <Grid container>\n                    <Grid item xs={12} sm={12} md={12} lg={12}>\n                        <Typography align=\"center\" className=\"cardLevel\" variant=\"h4\">How many cards do you <br/>want to play per level?</Typography>\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={12} lg={12}>\n                        <Grid container>\n                        <Grid item xs={2} sm={2} md={2} lg={2}></Grid>\n                        <Grid container item xs={8} sm={8} md={8} lg={8} justify=\"center\">\n                            <ToggleButtonGroup value={number} exclusive onChange={handleChange} className=\"groupSpace\">\n                                <ToggleButton disabled={number === 3 ? true : false} value={3} className={number === 3 ? \"disabledButton\" : \"buttonGroup\"}>3</ToggleButton>\n                                <ToggleButton disabled={number === 5 ? true : false} value={5} className={number === 5 ? \"disabledButton\" : \"buttonGroup\"}>5</ToggleButton>\n                                <ToggleButton disabled={number === 7 ? true : false} value={7} className={number === 7 ? \"disabledButton\" : \"buttonGroup\"}>7</ToggleButton>\n                                <ToggleButton disabled={number === 9 ? true : false} value={9} className={number === 9 ? \"disabledButton\" : \"buttonGroup\"}>9</ToggleButton>\n                                <ToggleButton disabled={number === 11 ? true : false} value={11} className={number === 11 ? \"disabledButton\" : \"buttonGroup\"}>11</ToggleButton>\n                                <ToggleButton disabled={number === 13 ? true : false} value={13} className={number === 13 ? \"disabledButton\" : \"buttonGroup\"}>13</ToggleButton>\n                                <ToggleButton disabled={number === 15 ? true : false} value={15} className={number === 15 ? \"disabledButton\" : \"buttonGroup\"}>15</ToggleButton>\n                            </ToggleButtonGroup>\n                        </Grid>\n                        <Grid item xs={2} sm={2} md={1} lg={1}></Grid>\n                    </Grid>\n                    <Grid item xs={1} sm={1} md={1} lg={1}></Grid>                    \n                </Grid>\n                    <Grid item xs={12} sm={12} md={12} lg={12}>\n                        <Grid container>\n                            <Grid item xs={4} sm={4} md={4} lg={4}></Grid>\n                            <Grid item xs={6} sm={6} md={6} lg={6}>\n                                <Button disabled={number === 0} variant=\"contained\" size=\"large\" className=\"startButton\" onClick={handleSettings}>Start Game</Button>\n                            </Grid>\n                            <Grid item xs={2} sm={2} md={2} lg={2}></Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Paper>\n            : null}\n            {startGame === false ? null : \n                <LivePlay numberPerRound={number}/>\n            }\n        </div>\n    )\n};","/Users/abdulosman/Documents/GitHub/StrangersOrNot/src/pages/game/liveplay/liveplay.js",["86","87","88"],"import React, { useState, useEffect } from \"react\"\nimport { Container } from \"@material-ui/core\"\nimport { Typography } from \"@material-ui/core\"\nimport Card  from \"../../../components/card/card\"\nimport { Grid } from \"@material-ui/core\"\nimport { Button } from \"@material-ui/core\"\nimport \"../../game/liveplay/liveplay.css\"\nimport axios from 'axios';\n\n// The component that the actual game runs on. Calls API and renders game conditionally using currentId\n\nexport default function LivePlay(props){\n    let number = props.numberPerRound; // receives number of cards per round from parent component\n    let [questionArray, setQuestionArray] = React.useState([]) // questions from API are stored here\n    let [currentId, setCurrentId] = React.useState(0); // current question number used to keep track of level type\n     \n    useEffect(() => {\n        let questions = [];\n        let count = 0;\n        axios.get('https://strangers-or-not.firebaseio.com/.json')\n            .then(res => {\n                let tempSet = new Set();\n                for (const [key, value] of Object.entries(res.data)){\n                    let tempArr = [];\n                    while (count < number){\n                        let card_value = value[Math.floor((Math.random() * value.length))];\n                        if (key === \"level1\"){\n                            if(!tempArr.includes(card_value)){ // section pushes cards to one big array and checks for no repeated cards\n                                tempArr.push(card_value);\n                                questions.push([\"Level 1: Perception\", card_value]);\n                                count++;\n                            }\n                        }\n                        else if (key === \"level2\"){\n                            if(!tempArr.includes(card_value)){\n                                tempArr.push(card_value);\n                                questions.push([\"Level 2: Connection\", card_value]);\n                                count++;\n                            }\n                        }\n                        else if (key === \"level3\"){\n                            if(!tempArr.includes(card_value)){\n                                tempArr.push(card_value);\n                                questions.push([\"Level 3: Reflection\", card_value]);\n                                count++;\n                            }\n                        }\n                    }\n                    count = 0;\n                }\n                console.log(questions);\n                questions.push([\"FINAL CARD\", \"EACH PLAYER SEND A MESSAGE TO THE OTHER. OPEN ONLY ONCE THE GAME HAS CONCLUDED.\"])\n                setQuestionArray(questions);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, [])\n\n    function handlePrevious() {\n        // decrements the currentId to take the previous question\n        setCurrentId(currentId - 1);\n    }\n\n    function handleNext() {\n        // increments the currentId to take the next question\n        setCurrentId(currentId + 1);\n    }\n    \n    return (\n        // conditional rendering of the question cards only once the questions have loaded\n        <Container>\n            {questionArray.length > 0? \n            <Grid container key={currentId}>\n                <Grid item xs={1} sm={2} md={2} lg={2}></Grid>\n                <Grid item xs={10} sm={8} md={8} lg={8} className=\"gameStyling\">\n                    <Typography variant=\"h5\" className=\"numberStyling\">Card {currentId+1}/{number*3+1}</Typography>\n\n                    <Card title={questionArray[currentId][0]} question={questionArray[currentId][1]} brand=\"Strangers or Not\"/>\n                    <Button disabled={currentId < 1} \n                            variant=\"outlined\" \n                            className=\"prevButton prevNext\" \n                            onClick={handlePrevious}>Previous</Button>\n\n                    <Button disabled={currentId >= number*3}\n                            variant=\"outlined\"\n                            className=\"nextButton prevNext\" \n                            onClick={handleNext}>\n                            {currentId+1 >= number*3 ? 'Final Card' : 'Next'}</Button>\n                </Grid>\n                <Grid item xs={1} sm={2} md={2} lg={2}></Grid>\n\n            </Grid>\n        : 'loading...'}\n        </Container>\n    )\n}","/Users/abdulosman/Documents/GitHub/StrangersOrNot/src/components/form/ContactForm.js",["89","90"],"// Customize this 'myform.js' script and add it to your JS bundle.\n// Then import it with 'import MyForm from \"./myform.js\"'.\n// Finally, add a <MyForm/> element whereever you wish to display the form.\nimport React from \"react\";\nimport { FormControl } from \"@material-ui/core\";\nimport { FormGroup } from \"@material-ui/core\";\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { Grid } from '@material-ui/core';\nimport { Input, InputLabel } from '@material-ui/core';\nimport { Paper } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport '../form/ContactForm.css'\n\n\nexport default class ContactForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submitForm = this.submitForm.bind(this);\n    this.state = {\n      status: \"\"\n    };\n  }\n\n  render() {\n    const { status } = this.state;\n    return (\n        <Paper elevation={7} className=\"contactPaper\">\n            <Grid container>\n                <Grid item xs={1} sm={1} md={2} lg={2}/>\n                <Grid item xs={10} sm={10} md={8} lg={8}>\n                    <FormControl className=\"formControl\">\n                        <FormLabel className=\"formLabel\">Let's Connect!</FormLabel>\n                        <form\n                            onSubmit={this.submitForm}\n                            className=\"form\"\n                            action=\"https://formspree.io/f/xbjpzzee\"\n                            method=\"POST\"\n                        >\n                            <span>\n                                <label className=\"inputLabels\">What's Your Name?*</label>\n                                <Input required={true} type=\"name\" name=\"Name\" fullWidth placeholder=\"Stranger\" className=\"inputs\"/>\n                            </span>\n                            <span>\n                                <label className=\"inputLabels\">What's Your Message?*</label>                        \n                                <Input required={true} type=\"text\" name=\"Message\" fullWidth placeholder=\"Feedback, New Q's\" className=\"inputs\"/>\n                            </span>\n                            {status === \"SUCCESS\" ? <p>We'll be sure to take note of your message in a timely manner. Thanks for playing our game!</p> : <Button type=\"submit\" variant=\"contained\" className=\"submitButton\">Submit</Button>}\n                            {status === \"ERROR\" && <p>Ooops! There was an error.</p>}\n                        </form>\n                    </FormControl>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n  }\n\n  submitForm(ev) {\n    ev.preventDefault();\n    const form = ev.target;\n    const data = new FormData(form);\n    const xhr = new XMLHttpRequest();\n    xhr.open(form.method, form.action);\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState !== XMLHttpRequest.DONE) return;\n      if (xhr.status === 200) {\n        form.reset();\n        this.setState({ status: \"SUCCESS\" });\n      } else {\n        this.setState({ status: \"ERROR\" });\n      }\n    };\n    xhr.send(data);\n  }\n}",{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"99","line":8,"column":8,"nodeType":"97","messageId":"98","endLine":8,"endColumn":19},{"ruleId":"95","severity":1,"message":"100","line":31,"column":10,"nodeType":"97","messageId":"98","endLine":31,"endColumn":23},{"ruleId":"101","severity":1,"message":"102","line":36,"column":18,"nodeType":"103","messageId":"104","endLine":36,"endColumn":20},{"ruleId":"101","severity":1,"message":"102","line":37,"column":18,"nodeType":"103","messageId":"104","endLine":37,"endColumn":20},{"ruleId":"95","severity":1,"message":"105","line":2,"column":26,"nodeType":"97","messageId":"98","endLine":2,"endColumn":36},{"ruleId":"95","severity":1,"message":"106","line":8,"column":8,"nodeType":"97","messageId":"98","endLine":8,"endColumn":14},{"ruleId":"95","severity":1,"message":"96","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"107","line":3,"column":8,"nodeType":"97","messageId":"98","endLine":3,"endColumn":16},{"ruleId":"95","severity":1,"message":"108","line":24,"column":11,"nodeType":"97","messageId":"98","endLine":24,"endColumn":18},{"ruleId":"101","severity":1,"message":"102","line":29,"column":29,"nodeType":"103","messageId":"104","endLine":29,"endColumn":31},{"ruleId":"109","severity":1,"message":"110","line":29,"column":42,"nodeType":"111","endLine":29,"endColumn":86},{"ruleId":"101","severity":1,"message":"102","line":31,"column":29,"nodeType":"103","messageId":"104","endLine":31,"endColumn":31},{"ruleId":"109","severity":1,"message":"110","line":31,"column":41,"nodeType":"111","endLine":31,"endColumn":83},{"ruleId":"95","severity":1,"message":"105","line":3,"column":10,"nodeType":"97","messageId":"98","endLine":3,"endColumn":20},{"ruleId":"95","severity":1,"message":"96","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"110","line":18,"column":17,"nodeType":"111","endLine":18,"endColumn":57},{"ruleId":"109","severity":1,"message":"110","line":19,"column":17,"nodeType":"111","endLine":19,"endColumn":57},{"ruleId":"95","severity":1,"message":"96","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"112","line":1,"column":27,"nodeType":"97","messageId":"98","endLine":1,"endColumn":36},{"ruleId":"95","severity":1,"message":"96","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"113","line":22,"column":21,"nodeType":"97","messageId":"98","endLine":22,"endColumn":28},{"ruleId":"114","severity":1,"message":"115","line":58,"column":8,"nodeType":"116","endLine":58,"endColumn":10,"suggestions":"117"},{"ruleId":"95","severity":1,"message":"118","line":6,"column":10,"nodeType":"97","messageId":"98","endLine":6,"endColumn":19},{"ruleId":"95","severity":1,"message":"119","line":9,"column":17,"nodeType":"97","messageId":"98","endLine":9,"endColumn":27},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'ContactForm' is defined but never used.","'startSettings' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'makeStyles' is defined but never used.","'Button' is defined but never used.","'LivePlay' is defined but never used.","'classes' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'tempSet' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'number'. Either include it or remove the dependency array.","ArrayExpression",["122"],"'FormGroup' is defined but never used.","'InputLabel' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},"Update the dependencies array to be: [number]",{"range":"125","text":"126"},[2786,2788],"[number]"]